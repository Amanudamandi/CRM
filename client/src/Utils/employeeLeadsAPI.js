import axios from "axios"

export const employeeLeads = async( setIndividualLeads, employeeAutoGeneratedID = '', coordinatorAutoGeneratedID = '', pageCount=1, limit = 15, startDate='', endDate='', name='', email='', mobile='', source='' , stage='', state='',  district='', kwpInterested='', type='', employeeName, teamLeaderName,  setIsLoading = null,aadharCard='',electricityBill='',panCard='',bankDetails='',cancleCheck='',dimension='',video='' ) => {
    if(setIsLoading !== null ) setIsLoading(true);
    try{
        const sendRequest = await axios.get(`${process.env.REACT_APP_URL}/client/fetchClients/?page=${pageCount}&limit=${limit}&empID=${employeeAutoGeneratedID}&TLID=${coordinatorAutoGeneratedID}&startDate=${startDate}&endDate=${endDate}&name=${name}&email=${email}&mobile=${mobile}&source=${source}&kwpInterested=${kwpInterested}&type=${type}&stage=${stage}&state=${state}&district=${district}&employeeName=${employeeName === undefined ? '' : employeeName}&teamLeaderName=${teamLeaderName === undefined ? '' : teamLeaderName}&aadharCard=${aadharCard}&electricityBill=${electricityBill}&panCard=${panCard}&bankDetails=${bankDetails}&cancleCheck=${cancleCheck}&dimension=${dimension}&video=${video}`);
        // const sendRequest = await axios.get(`http://localhost:8080/client/fetchClients/?page=${pageCount}&limit=${limit}&empID=${employeeAutoGeneratedID}&TLID=${coordinatorAutoGeneratedID}&startDate=${startDate}&endDate=${endDate}&name=${name}&email=${email}&mobile=${mobile}&source=${source}&kwpInterested=${kwpInterested}&type=${type}&stage=${stage}&state=${state}&district=${district}`);
        const response = await sendRequest.data;
        console.log("response data : ",response);
        const { success } = response;
        if(success){
            // console.log(response.clients);
            
            setIndividualLeads !== null && setIndividualLeads(response.clients);
            // setHasMore !== null && setHasMore(response.clients.length === limit);
            return response.clients;
        }
    }catch(error){
        console.log(error);
    } 
    finally{
        if(setIsLoading !== null)
            setIsLoading(false)
    }
}